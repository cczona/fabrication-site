%head
  %meta(charset="UTF-8")
  %title Fabrication
  %link(rel="stylesheet" type="text/css" href="/stylesheets/application.css")
  %script(type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.6/jquery.min.js")
  %script(type="text/javascript" src="/javascript/application.js")
  /[if IE]
    %script(src="http://html5shiv.googlecode.com/svn/trunk/html5.js" type="text/javascript")
  %script(type="text/javascript" src="http://use.typekit.com/vkq5xzv.js")

%body
  #wrapper
    #catcher_back
    #conveyor
      #cutout
      #items
        %div
        %div
        %div
        %div
        %div
        %div
        %div
        %div
        %div
        %div
        %div
      #panel
      #puncher
      #glow
      #placer
    #catcher
      %div
    %section#content
      %hgroup
        %h1 Fabrication
        %h2 object generation for Rails
      .opening
        :markdown
          Fabrication is an object generation library. It allows you to define Fabricators, which are the schematics for objects you want to generate. You can then Fabricate objects as needed anywhere in your app or specs.

          Currently supported object types are ...

          - Plain old Ruby objects
          - ActiveRecord objects
          - Mongoid Documents
          - Sequel Models

          By default it will lazily generate active record associations. So if you have a has_many :widgets defined, it will not actually generate the widgets until the association is accessed. You can override this by appending "!" to the name of the parameter when defining the field in the Fabricator.
      .main
        ~ @content
    %footer
      :markdown
        Fabrication is by Paul Elliott

        Designed by Cameron Daigle

        This is a Hashrocket venture
